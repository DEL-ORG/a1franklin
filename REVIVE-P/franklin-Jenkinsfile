pipeline {
    agent any
    
    options {
        buildDiscarder(logRotator(numToKeepStr: '7'))
        disableConcurrentBuilds()
        timeout(time: 10, unit: 'MINUTES')
        timestamps()
    }
    
    parameters {
        string(name: 'BRANCH_NAME', defaultValue: 'main', description: 'Enter the name of the branch')
    }
    
    
    stages {
        stage('Clone Repository') {
            steps {
                echo "Cloning repository..."
                checkout([$class: 'GitSCM', branches: [[name: "${params.BRANCH_NAME}"]], userRemoteConfigs: [[url: 'https://github.com/DEL-ORG/a1franklin.git']]])
            }
        }
        
        stage('Login to DockerHub') {
            environment {
                DOCKERHUB_CREDENTIALS = credentials('DOCKERHUB_CREDENTIALS')
            }
            steps {
                sh "echo $DOCKERHUB_CREDENTIALS | docker login -u $DOCKERHUB_CREDENTIALS --password-stdin"
            }
        }
        
        stage('catalog unit-test') {
            agent {
                docker {
                    image 'franklinagbanyo/golang02-revive:v1.0.0'
                    args '-u 0:0'
                }
            }
            steps {
                sh '''
                    cd REVIVE-P/src/catalog 
                    go test -buildscv=false
                '''
            }        
        }
        
        stage('unit-test ui') {
            agent {
                docker {
                    image 'franklinagbanyo/maven-revive-ui:v1.0.0'
                    args '-u root:root'
                }
            }
            steps {
                sh '''
                    cd REVIVE-P/src/ui
                    mvn test -DskipTests=true
                '''
            }       
        }
        
        stage('unit-test orders') {
            agent {
                docker {
                    image 'franklinagbanyo/order-maven-revive:v1.0.0'
                    args '-u root:root'
                }
            }
            steps {
                sh '''
                    cd REVIVE-P/src/orders
                    mvn test -DskipTests=true
                '''
            }
        }
        
        stage('Test maven-cart') {
            agent {
                docker {
                    image 'franklinagbanyo/nodejs01-revive:v1.0.0'
                }
            }
            steps {
                sh '''
                    cd REVIVE-P/src/cart/
                    mvn test -Dmaven.test.skip=true --quiet
                '''
            }
        }
        
        stage('unit-test checkout') {
            agent {
                docker {
                    image 'franklin/nodejs01-revive:v1.0.0'
                    args '-u root:root'
                }
            }
            steps {
                sh '''
                    cd REVIVE-P/src/checkout 
                    npm install
                '''
            }            
        }
    }

    post {
        success {
            slackSend color: '#2EB67D',
            channel: 'a1franklin', 
            message: "*REVIVE Project Build Status*" +
                     "\n Project Name: REVIVE" +
                     "\n Job Name: ${env.JOB_NAME}" +
                     "\n Build number: ${currentBuild.displayName}" +
                     "\n Build Status : *SUCCESS*" +
                     "\n Build url : ${env.BUILD_URL}"
        }
        failure {
            slackSend color: '#E01E5A',
            channel: 'a1franklin',  
            message: "*REVIVE Project Build Status*" +
                     "\n Project Name: REVIVE" +
                     "\n Job Name: ${env.JOB_NAME}" +
                     "\n Build number: ${currentBuild.displayName}" +
                     "\n Build Status : *FAILED*" +
                     "\n Build User : *franklin*" +
                     "\n Action : Please check the console output to fix this job IMMEDIATELY" +
                     "\n Build url : ${env.BUILD_URL}"
        }
        unstable {
            slackSend color: '#ECB22E',
            channel: 'REVIVE', 
            message: "*REVIVE Project Build Status*" +
                     "\n Project Name: REVIVE" +
                     "\n Job Name: ${env.JOB_NAME}" +
                     "\n Build number: ${currentBuild.displayName}" +
                     "\n Build Status : *UNSTABLE*" +
                     "\n Action : Please check the console output to fix this job IMMEDIATELY" +
                     "\n Build url : ${env.BUILD_URL}"
        }   
    }
}
