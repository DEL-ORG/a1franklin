---
- name: Check if users exist
  ansible.builtin.user:
    name: "{{ item }}"
  check_mode: true
  register: users_check
  loop: "{{ users | map(attribute='name') | list }}"

- name: Create new users
  user:
    name: "{{ item.name }}"
    create_home: true
    comment: "{{ item.comment | default(omit) }}"
    uid: "{{ '10409' | random }}"
    state: present
    shell: "{{ item.shell | default('/bin/bash') }}"
  loop: "{{ users }}"
  when: item.name not in users_check.results | selectattr('failed', 'equalto', False) | map(attribute='item') | list     
 
- name: Add users to groups
  user:
    name: "{{ item.name }}"
    groups: "{{ item.groups | join(',') }}"
    append: yes
  loop: "{{ users }}"
  when: item.groups is defined

- name: Generate an ssh key 
  user:
    name: "{{ item.name }}"
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: "/home/{{ item.name }}/.ssh/id_rsa" #.ssh/id_rsa 
    ssh_key_type: "rsa"
    force: yes
  loop: "{{ users }}"
  when: item.ssh_key is defined
 
- name: Add SSH keys
  authorized_key:
    user: "{{ item.name }}"
    state: present
    key: "{{ lookup('file', '/home/' + item.name + '/.ssh/id_rsa.pub') }}"
    path: /etc/ssh/authorized_keys/{{ item.name }} 
    manage_dir: False   
  loop: "{{ users }}"
  when: item.ssh_key is defined

 
- name: Manage sudoers file entries
  copy:
    dest: "/etc/sudoers.d/{{ item.name }}"
    content: "{{ item.sudoers_content }}"
    mode: '0440'
  loop: "{{ users }}"
  when: item.sudoers_content is defined

- name: Disable users
  user:
    name: "{{ item.name }}"
    shell: "/sbin/nologin"
  loop: "{{ disable_users }}"
- name: Delete users
  user:
    name: "{{ item.name }}"
    home: "{{ item.home }}"
    state: absent
    remove: yes
  loop: "{{ delete_users }}"
 
- name: Change user shells
  user:
    name: "{{ item.name }}"
    shell: "{{ item.shell }}"
  loop: "{{ change_shells }}"
 





